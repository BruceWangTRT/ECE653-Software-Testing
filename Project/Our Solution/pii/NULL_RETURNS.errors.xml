<error>
<checker>NULL_RETURNS</checker>
<template>null_returns_multievent_v1</template>
<file>/home/s7ren/workspace/pii/pi/ProgramCall.java</file>
<function>ProgramCall.anlyseLLVMoutPut(java.lang.String)</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;fileName == null&quot;}}</description>
<line>44</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>45</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.isFile()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.exists()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(singleLine = bufferedReader.readLine()) != null&quot;}}</description>
<line>70</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;singleLine.trim().startsWith(&quot;Call &quot;)&quot;}}</description>
<line>72</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>88</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;singleLine.trim().startsWith(&quot;CS&quot;)&quot;}}</description>
<line>88</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;matcher1.find()&quot;}}</description>
<line>90</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>97</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>70</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(singleLine = bufferedReader.readLine()) != null&quot;}}</description>
<line>70</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;singleLine.trim().startsWith(&quot;Call &quot;)&quot;}}</description>
<line>72</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;matcher1.find()&quot;}}</description>
<line>75</line>
<path_event></path_event>
</event>
<event>
<tag>returned_null</tag>
<description>{CovLStr{v1}{Function {0} returns null (checked {1} out of {2} times).}{&quot;java.util.regex.Matcher.group(int)&quot;}{0}{3}}</description>
<line>76</line>
</event>
<event>
<tag>var_assigned</tag>
<description>{CovLStr{v1}{Assigning: {0} = null return value from {1}.}{&quot;currentCaller&quot;}{&quot;java.util.regex.Matcher.group(int)&quot;}}</description>
<line>76</line>
</event>
<event>
<main>true</main>
<tag>null_method_call</tag>
<description>{CovLStr{v1}{Calling a method on null object {0}.}{&quot;currentCaller&quot;}}</description>
<line>77</line>
</event>
<extra>group</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>NULL_RETURNS</checker>
<template>null_returns_multievent_v1</template>
<file>/home/s7ren/workspace/pii/pi/ProgramCall.java</file>
<function>ProgramCall.anlyseLLVMoutPut(java.lang.String)</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;fileName == null&quot;}}</description>
<line>44</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>45</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.isFile()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.exists()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(singleLine = bufferedReader.readLine()) != null&quot;}}</description>
<line>70</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;singleLine.trim().startsWith(&quot;Call &quot;)&quot;}}</description>
<line>72</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>88</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;singleLine.trim().startsWith(&quot;CS&quot;)&quot;}}</description>
<line>88</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;matcher1.find()&quot;}}</description>
<line>90</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>97</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>70</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(singleLine = bufferedReader.readLine()) != null&quot;}}</description>
<line>70</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;singleLine.trim().startsWith(&quot;Call &quot;)&quot;}}</description>
<line>72</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;matcher1.find()&quot;}}</description>
<line>75</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>80</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;matcher2.find()&quot;}}</description>
<line>80</line>
<path_event></path_event>
</event>
<event>
<tag>returned_null</tag>
<description>{CovLStr{v1}{Function {0} returns null (checked {1} out of {2} times).}{&quot;java.util.regex.Matcher.group(int)&quot;}{0}{3}}</description>
<line>81</line>
</event>
<event>
<tag>var_assigned</tag>
<description>{CovLStr{v1}{Assigning: {0} = null return value from {1}.}{&quot;currentCaller&quot;}{&quot;java.util.regex.Matcher.group(int)&quot;}}</description>
<line>81</line>
</event>
<event>
<main>true</main>
<tag>null_method_call</tag>
<description>{CovLStr{v1}{Calling a method on null object {0}.}{&quot;currentCaller&quot;}}</description>
<line>82</line>
</event>
<extra>group</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>NULL_RETURNS</checker>
<template>null_returns_multievent_v1</template>
<file>/home/s7ren/workspace/pii/pi/ProgramCall.java</file>
<function>ProgramCall.anlyseLLVMoutPut(java.lang.String)</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;fileName == null&quot;}}</description>
<line>44</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>45</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.isFile()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;file.exists()&quot;}}</description>
<line>61</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(singleLine = bufferedReader.readLine()) != null&quot;}}</description>
<line>70</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;singleLine.trim().startsWith(&quot;Call &quot;)&quot;}}</description>
<line>72</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>88</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;singleLine.trim().startsWith(&quot;CS&quot;)&quot;}}</description>
<line>88</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;matcher1.find()&quot;}}</description>
<line>90</line>
<path_event></path_event>
</event>
<event>
<tag>returned_null</tag>
<description>{CovLStr{v1}{Function {0} returns null (checked {1} out of {2} times).}{&quot;java.util.regex.Matcher.group(int)&quot;}{0}{3}}</description>
<line>91</line>
</event>
<event>
<tag>var_assigned</tag>
<description>{CovLStr{v1}{Assigning: {0} = null return value from {1}.}{&quot;currentCallee&quot;}{&quot;java.util.regex.Matcher.group(int)&quot;}}</description>
<line>91</line>
</event>
<event>
<main>true</main>
<tag>null_method_call</tag>
<description>{CovLStr{v1}{Calling a method on null object {0}.}{&quot;currentCallee&quot;}}</description>
<line>92</line>
</event>
<extra>group</extra>
<subcategory>none</subcategory>
</error>
